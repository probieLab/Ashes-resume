!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}({5:function(e,t){const n=document.querySelectorAll(".descriptionItem"),o=(document.querySelectorAll(".descriptionItem").length,document.querySelector(".controlBox"),document.querySelector(".descriptionGroup"),document.querySelector(".startMask"));var r=window.innerHeight,i=window.innerWidth;window.onresize=function(){r=window.innerHeight,i=window.innerWidth,o.style.height=r+"px",o.style.width=i+"px"},null!=navigator.serviceWorker&&navigator.serviceWorker.register("js/sw.js").then(function(e){console.log("The borrow support PWA")}),o.style.height=r+"px",o.style.width=i+"px";const c=e=>new Promise((t,o)=>{n[e].classList.add("descriptionActionAnimation"),setTimeout(e=>{t(e)},1500,n)}).then(t=>(t[e].classList.add("descriptionAction"),t[e].classList.remove("descriptionActionAnimation"),t)).then(t=>{return new Promise((n,o)=>{setTimeout(t=>{e<3&&t[e].classList.add("descriptionSwitchAnimation"),n(t)},3e3,t)})}).then(t=>(new Promise((n,o)=>{setTimeout(t=>{e<3&&t[e].classList.remove("descriptionAction"),n(0)},1500,t)}),"success"));document.querySelector("#autoShow").addEventListener("click",function(){o.style.animation="descriptionSwitch 1500ms",setTimeout(()=>{o.style.display="none",(e=>{let t=Promise.resolve();e.forEach((e,n)=>{t=t.then(()=>c(n))})})(n)},1500)}),document.querySelector("#manualShow").addEventListener("click",function(){window.open("https://github.com/sadofriod?tab=repositories")})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,