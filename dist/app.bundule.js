!function(n){var r={};function t(e){if(r[e])return r[e].exports;var i=r[e]={i:e,l:!1,exports:{}};return n[e].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=n,t.c=r,t.d=function(n,r,e){t.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:e})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,r){if(1&r&&(n=t(n)),8&r)return n;if(4&r&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var i in n)t.d(e,i,function(r){return n[r]}.bind(null,i));return e},t.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(r,"a",r),r},t.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},t.p="",t(t.s=6)}([function(n,r,t){var e=t(1);"string"==typeof e&&(e=[[n.i,e,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(3)(e,i);e.locals&&(n.exports=e.locals)},function(n,r,t){(n.exports=t(2)(!1)).push([n.i,"*{\r\n    margin: 0px;\r\n    padding: 0px;\r\n    font-family: \"Avenir\", 'Helvetica Neue', 'Lato', 'Segoe UI', Helvetica, Arial, sans-serif;\r\n    color:#222\r\n}\r\nbody{\r\n    display: flex;\r\n    flex: 1;\r\n}\r\n.timeFlag{\r\n    position: fixed;\r\n    right: 30px;\r\n    top: 30px;\r\n}\r\n/* control button */\r\n.controlBox{\r\n    display: none;\r\n    position: fixed;\r\n    height: 44px;\r\n    width: 100%;\r\n    bottom: 0px ;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.controlBtn {\r\n    display: flex;\r\n    flex: 1;\r\n    /* flex-basis: 10%; */\r\n    margin: 5px;\r\n    height: 40px;\r\n}\r\n/* 蒙版 */\r\n.startMask{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0px;\r\n    left: 0px;\r\n}\r\n.chose{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex: 1;\r\n    height: auto;\r\n    width: 100%;\r\n    z-index: 30;\r\n}\r\n.choseButton{\r\n    display: flex;\r\n    cursor: pointer;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 120px;\r\n    width: 120px;\r\n    margin: 20px;\r\n    background-color: rgba(255, 255, 255, 0.692);\r\n    border-radius: 50%;\r\n}\r\n.choseButton:hover {\r\n    background-color: rgba(255, 255, 255, 1);\r\n    box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.692)\r\n}\r\n/* 蒙版内波浪动画 */\r\n@keyframes move_wave {\r\n    0% {\r\n        transform: translateX(0) translateZ(0) scaleY(1)\r\n    }\r\n    50% {\r\n        transform: translateX(-25%) translateZ(0) scaleY(0.55)\r\n    }\r\n    100% {\r\n        transform: translateX(-50%) translateZ(0) scaleY(1)\r\n    }\r\n}\r\n@-webkit-keyframes move_wave {\r\n    0% {\r\n        transform: translateX(0) translateZ(0) scaleY(1)\r\n    }\r\n    50% {\r\n        transform: translateX(-25%) translateZ(0) scaleY(0.55)\r\n    }\r\n    100% {\r\n        transform: translateX(-50%) translateZ(0) scaleY(1)\r\n    }\r\n}\r\n.waveWrapper {\r\n    overflow: hidden;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    top: 0;\r\n    margin: auto;\r\n}\r\n.waveWrapperInner {\r\n    position: absolute;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    bottom: -1px;\r\n    background-image: linear-gradient(to top, #86377b 20%, #27273c 80%);\r\n}\r\n.bgTop {\r\n    z-index: 15;\r\n    opacity: 0.5;\r\n}\r\n.bgMiddle {\r\n    z-index: 10;\r\n    opacity: 0.75;\r\n}\r\n.bgBottom {\r\n    z-index: 5;\r\n}\r\n.wave {\r\n    position: absolute;\r\n    left: 0;\r\n    width: 200%;\r\n    height: 100%;\r\n    background-repeat: repeat no-repeat;\r\n    background-position: 0 bottom;\r\n    transform-origin: center bottom;\r\n}\r\n.waveTop {\r\n    background-size: 50% 100px;\r\n}\r\n.waveAnimation .waveTop {\r\n  animation: move-wave 3s;\r\n   -webkit-animation: move-wave 3s;\r\n   -webkit-animation-delay: 1s;\r\n   animation-delay: 1s;\r\n}\r\n.waveMiddle {\r\n    background-size: 50% 120px;\r\n}\r\n.waveAnimation .waveMiddle {\r\n    animation: move_wave 10s linear infinite;\r\n}\r\n.waveBottom {\r\n    background-size: 50% 100px;\r\n}\r\n.waveAnimation .waveBottom {\r\n    animation: move_wave 15s linear infinite;\r\n}\r\n/*简历主体内容*/\r\n/* .descriptionGroup{\r\n    position: relative;\r\n    top:0px;\r\n    left: 0px;\r\n} */\r\n.descriptionAction{\r\n    opacity: 1 !important;\r\n    display: block !important;\r\n    margin-top:0px !important;\r\n}\r\n@media screen and (min-width:415px)\r\n{.descriptionItem{\r\n    height: auto;\r\n    width: auto;\r\n    opacity: 0;\r\n    margin-top:200px;\r\n    display: none;\r\n}\r\n.descriptionItem h2{\r\n    font-size: 3em;\r\n    font-weight:normal;\r\n    margin-top:7%;\r\n    padding-left:100px;\r\n    margin-bottom:20px;   \r\n}\r\n.descriptionItem h3{\r\n    font-size: 1.85em;\r\n    padding-left:100px;\r\n    margin-top: 0.25em;\r\n    margin-bottom: 0.5em;  \r\n    font-weight: normal;   \r\n    color: #685884;\r\n}\r\n.descriptionItem a{\r\n    text-decoration: none;\r\n    color: #5C5EDC;\r\n    outline: none;\r\n}\r\n.descriptionItem pre,.descriptionItem p{\r\n    font-size: 1.25em;\r\n    line-height: 1.5;\r\n    padding-left:100px;\r\n    padding-right:100px; \r\n}\r\n.descriptionItem:last-child p{\r\n    text-align: right;\r\n    margin-top: 200px;\r\n}}\r\n@media screen and (max-width:414px)\r\n{.descriptionItem{\r\n    height: auto;\r\n    width: 100%;\r\n    opacity: 0;\r\n    margin-top:200px;\r\n    display: none;\r\n}\r\n.descriptionItem h2{\r\n    font-size: 2em;\r\n    width: 100%;\r\n    word-wrap: break-word;\r\n    font-weight:normal;\r\n    margin-top:7%;\r\n    padding-left:20px;\r\n    margin-bottom:20px;   \r\n}\r\n.descriptionItem h3{\r\n    font-size: 1.5em;\r\n    /* width: 100%; */\r\n    padding-left:5%;\r\n    padding-right:5%;\r\n    margin-top: 0.25em;\r\n    margin-bottom: 0.5em;  \r\n    font-weight: normal;   \r\n    color: #685884;\r\n}\r\n.descriptionItem a{\r\n    text-decoration: none;\r\n    color: #5C5EDC;\r\n    outline: none;\r\n}\r\n.descriptionItem pre,.descriptionItem p{\r\n    font-size: 1.25em;\r\n    line-height: 1.5;\r\n    padding-left:5%;\r\n    padding-right:5%;\r\n    /* width: 100%; */\r\n}\r\n.descriptionItem:last-child p{\r\n    text-align: right;\r\n    word-wrap: break-word;\r\n    margin-top: 200px;\r\n}}\r\n.descriptionActionAnimation{\r\n    display: block !important;\r\n    animation: descriptionItemAction 1500ms;\r\n}\r\n@keyframes descriptionItemAction{\r\n    0%{\r\n        opacity: 0;\r\n        margin-top:200px;\r\n    }\r\n    50%{\r\n        /* opacity: 0.5; */\r\n        /* margin-top:165px; */\r\n    }\r\n    100%{\r\n        opacity: 1;\r\n        margin-top:0px;\r\n    }\r\n}\r\n@-webkit-keyframes descriptionItemAction{\r\n    0%{\r\n        opacity: 0;\r\n        margin-top:200px;\r\n    }\r\n    50%{\r\n        opacity: 0.5;\r\n        /* margin-top:165px; */\r\n    }\r\n    100%{\r\n        opacity: 1;\r\n        margin-top:0px;\r\n    }\r\n}\r\n.descriptionSwitchAnimation{\r\n    position: absolute;\r\n    /* left:10%; */\r\n    animation: descriptionSwitch 1500ms;\r\n}\r\n@keyframes descriptionSwitch{\r\n    0%{\r\n        opacity: 1;\r\n        margin-top:0px;\r\n    }\r\n    50%{\r\n        /* opacity: 0.5; */\r\n        /* margin-top:165px; */\r\n    }\r\n    100%{\r\n        \r\n        opacity: 0;\r\n        margin-top:-200px;\r\n    }\r\n}\r\n@-webkit-keyframes descriptionSwitch{\r\n    0%{\r\n        opacity: 1;\r\n        margin-top:0px;\r\n    }\r\n    50% {\r\n    /* opacity: 0.5; */\r\n    /* margin-top:165px; */\r\n    }\r\n    100%{\r\n        opacity: 0;\r\n        margin-top:-200px;\r\n    }\r\n}",""])},function(n,r){n.exports=function(n){var r=[];return r.toString=function(){return this.map(function(r){var t=function(n,r){var t=n[1]||"",e=n[3];if(!e)return t;if(r&&"function"==typeof btoa){var i=function(n){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"}(e),o=e.sources.map(function(n){return"/*# sourceURL="+e.sourceRoot+n+" */"});return[t].concat(o).concat([i]).join("\n")}return[t].join("\n")}(r,n);return r[2]?"@media "+r[2]+"{"+t+"}":t}).join("")},r.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var e={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(e[o]=!0)}for(i=0;i<n.length;i++){var a=n[i];"number"==typeof a[0]&&e[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),r.push(a))}},r}},function(n,r,t){var e={},i=function(n){var r;return function(){return void 0===r&&(r=n.apply(this,arguments)),r}}(function(){return window&&document&&document.all&&!window.atob}),o=function(n){var r={};return function(n){if("function"==typeof n)return n();if(void 0===r[n]){var t=function(n){return document.querySelector(n)}.call(this,n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}}(),a=null,s=0,p=[],l=t(4);function c(n,r){for(var t=0;t<n.length;t++){var i=n[t],o=e[i.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](i.parts[a]);for(;a<i.parts.length;a++)o.parts.push(g(i.parts[a],r))}else{var s=[];for(a=0;a<i.parts.length;a++)s.push(g(i.parts[a],r));e[i.id]={id:i.id,refs:1,parts:s}}}}function d(n,r){for(var t=[],e={},i=0;i<n.length;i++){var o=n[i],a=r.base?o[0]+r.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};e[a]?e[a].parts.push(s):t.push(e[a]={id:a,parts:[s]})}return t}function u(n,r){var t=o(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var e=p[p.length-1];if("top"===n.insertAt)e?e.nextSibling?t.insertBefore(r,e.nextSibling):t.appendChild(r):t.insertBefore(r,t.firstChild),p.push(r);else if("bottom"===n.insertAt)t.appendChild(r);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=o(n.insertInto+" "+n.insertAt.before);t.insertBefore(r,i)}}function f(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var r=p.indexOf(n);r>=0&&p.splice(r,1)}function m(n){var r=document.createElement("style");return void 0===n.attrs.type&&(n.attrs.type="text/css"),h(r,n.attrs),u(n,r),r}function h(n,r){Object.keys(r).forEach(function(t){n.setAttribute(t,r[t])})}function g(n,r){var t,e,i,o;if(r.transform&&n.css){if(!(o=r.transform(n.css)))return function(){};n.css=o}if(r.singleton){var p=s++;t=a||(a=m(r)),e=v.bind(null,t,p,!1),i=v.bind(null,t,p,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(n){var r=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",h(r,n.attrs),u(n,r),r}(r),e=function(n,r,t){var e=t.css,i=t.sourceMap,o=void 0===r.convertToAbsoluteUrls&&i;(r.convertToAbsoluteUrls||o)&&(e=l(e));i&&(e+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([e],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,t,r),i=function(){f(t),t.href&&URL.revokeObjectURL(t.href)}):(t=m(r),e=function(n,r){var t=r.css,e=r.media;e&&n.setAttribute("media",e);if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}.bind(null,t),i=function(){f(t)});return e(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;e(n=r)}else i()}}n.exports=function(n,r){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(r=r||{}).attrs="object"==typeof r.attrs?r.attrs:{},r.singleton||"boolean"==typeof r.singleton||(r.singleton=i()),r.insertInto||(r.insertInto="head"),r.insertAt||(r.insertAt="bottom");var t=d(n,r);return c(t,r),function(n){for(var i=[],o=0;o<t.length;o++){var a=t[o];(s=e[a.id]).refs--,i.push(s)}n&&c(d(n,r),r);for(o=0;o<i.length;o++){var s;if(0===(s=i[o]).refs){for(var p=0;p<s.parts.length;p++)s.parts[p]();delete e[s.id]}}}};var w=function(){var n=[];return function(r,t){return n[r]=t,n.filter(Boolean).join("\n")}}();function v(n,r,t,e){var i=t?"":e.css;if(n.styleSheet)n.styleSheet.cssText=w(r,i);else{var o=document.createTextNode(i),a=n.childNodes;a[r]&&n.removeChild(a[r]),a.length?n.insertBefore(o,a[r]):n.appendChild(o)}}},function(n,r){n.exports=function(n){var r="undefined"!=typeof window&&window.location;if(!r)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=r.protocol+"//"+r.host,e=t+r.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,r){var i,o=r.trim().replace(/^"(.*)"$/,function(n,r){return r}).replace(/^'(.*)'$/,function(n,r){return r});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?n:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:e+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},,function(n,r,t){"use strict";t.r(r);const e=function(n,r,t){if(!(this instanceof e))return new e(n,r,t);this.target=n,this.state={},this.props=r||{},this.children=t||[],this.key=r||null,this.count=this.children.length||0};e.prototype.render=function(){let n=document.createElement(this.target),r=this.props;for(let t in r)n.setAttribute(t,r[t]);for(let r=0;r<this.count;r++){let t=this.children[r]instanceof e?this.children[r].render():document.createTextNode(this.children[r]);n.append(t)}return n};const i=new e("div",{class:"startMask",style:"height: 670px; width: 1364px;"},[new e("div",{class:"waveWrapper waveAnimation"},[new e("div",{class:"waveWrapperInner bgTop"},[new e("div",{class:"wave waveTop",style:'background-image: url("http://jq22.qiniudn.com/wave-top.png")'})]),new e("div",{class:"waveWrapperInner bgMiddle"},[new e("div",{class:"wave waveMiddle",style:'background-image: url("http://jq22.qiniudn.com/wave-mid.png")'})]),new e("div",{class:"waveWrapperInner bgBottom"},[new e("div",{class:"wave waveBottom",style:'background-image: url("http://jq22.qiniudn.com/wave-bot.png")'})])]),new e("div",{class:"chose"},[new e("div",{class:"choseButton",id:"autoShow"},["Auto play"]),new e("div",{class:"choseButton",id:"manualShow"},["Go Github"])])]);t(0);const o=new e("div",{class:"descriptionItem","data-id":"1"},[new e("h2",null,["个人介绍"]),new e("h3",null,["姓名：杜士华"]),new e("h3",null,["出生年月：1996.12"]),new e("h3",null,["手机：152-4712-4825"]),new e("h3",null,["邮箱：792634614@qq.com"]),new e("h3",null,["个人仓库：",new e("a",{href:"https://github.com/sadofriod"},["https://github.com/sadofriod"])]),new e("h3",null,["教育背景：2015 - 2019 内蒙古工业大学 软件工程专业 本科"])]),a=new e("div",{class:"descriptionItem","data-id":"2"},[new e("h2",null,["最近的项目"]),new e("h3",null,["云水族箱APP"]),new e("p",null,["在项目中负责编写APP、部分node代码。使用react-native实现，即使数据通信使用MQTT协议（订阅/发布模式）数据库mysql,后端是基于node.js的express框架。"]),new e("p",null,["用户可以通过APP远程监控，水族箱的水温，PH和液位。"]),new e("p",null,["可以通过APP提供的功能，远程控制水族箱内置的加热棒、风扇来实现对水族箱的温度控制，通过过滤和换水功能来实现对水族箱的PH和液位控制，通过喂食功能控制喂食器。然后通过视频查看水族箱情况。视频模块使用了webrtc。"]),new e("p",null,["项目仓库：",new e("a",{href:"https://github.com/sadofriod/fishbowl"},["https://github.com/sadofriod/fishbowl"])])]),s=new e("div",{class:"descriptionItem","data-id":"3"},[new e("h2",null,["掌握技能"]),new e("h3",null,["1、熟练掌握JavaScript（es5/es6），HTML（5），CSS（3）"]),new e("h3",null,["2、熟悉git、github分支管理、npm"]),new e("h3",null,["3、熟悉react native、ajax"]),new e("h3",null,["4、了解node.js、http协议"])]),p=new e("div",{class:"descriptionItem","data-id":"4"},[new e("h2",null,["了解更多  o( > _ < )o"]),new e("h3",null,["Call Me:15247124825"]),new e("h3",null,["E-mail:792634614@qq.com"]),new e("h3",null,["谢谢观看",new e("a",{href:""},["->;"])])]),l=new e("meta",{name:"viewport",content:"width=device-width, initial-scale=1,height = device-height"}),c=new e("div",{class:"descriptionGroup"},[o,a,s,p]);document.head.appendChild(l.render()),document.body.appendChild(i.render()),document.body.appendChild(c.render())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vY3NzL2luZGV4LmNzcz9mMWQzIiwid2VicGFjazovLy8uL2Nzcy9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovLy8uL3NyYy92aXJ0dWFsX2RvbV9hcGkvdmlydHVhbF9kb20uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RvbV90cmVlL21hc2suanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RvbV90cmVlL2FuaW1hdGlvbl9pdGVtLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY29udGVudCIsIm9wdGlvbnMiLCJobXIiLCJ0cmFuc2Zvcm0iLCJpbnNlcnRJbnRvIiwidW5kZWZpbmVkIiwibG9jYWxzIiwicHVzaCIsInVzZVNvdXJjZU1hcCIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlTWFwIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwidG9Db21tZW50Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiY29uY2F0Iiwiam9pbiIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsImlkIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwiZm4iLCJtZW1vIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJtZW1vaXplIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiRXJyb3IiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJhcHBlbmRDaGlsZCIsImZpcnN0Q2hpbGQiLCJiZWZvcmUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJpZHgiLCJpbmRleE9mIiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImF0dHJzIiwidHlwZSIsImFkZEF0dHJzIiwiZWwiLCJrZXlzIiwiZm9yRWFjaCIsInNldEF0dHJpYnV0ZSIsIm9iaiIsInVwZGF0ZSIsInJlbW92ZSIsInJlc3VsdCIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwicmVwbGFjZVRleHQiLCJ0ZXh0U3RvcmUiLCJpbmRleCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwibG9jYXRpb24iLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwicmVwbGFjZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJ0cmltIiwiJDEiLCJ0ZXN0IiwidmQiLCJwcm9wcyIsImNoaWxkcmVuIiwic3RhdGUiLCJjb3VudCIsInJlbmRlciIsInRlbXBFbGVtZW50IiwiYXBwZW5kIiwibWFzayIsImNsYXNzIiwicGVyc29uYWwiLCJkYXRhLWlkIiwicHJvamVjdCIsInNraWxsIiwiZW5kUGFnZSIsIm1vYmlsZU1ldGEiLCJkZXNjcmlwdGlvbkdyb3VwIiwiYm9keSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFBSCxFQUNBSSxHQUFBLEVBQ0FILFlBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEdBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFBQ0FOLE9BQUFDLGVBQUFiLEVBQUFpQixPQUFBQyxhQUF3REMsTUFBQSxXQUV4RFAsT0FBQUMsZUFBQWIsRUFBQSxjQUFpRG1CLE9BQUEsS0FRakRyQixFQUFBc0IsRUFBQSxTQUFBRCxFQUFBRSxHQUVBLEdBREEsRUFBQUEsSUFBQUYsRUFBQXJCLEVBQUFxQixJQUNBLEVBQUFFLEVBQUEsT0FBQUYsRUFDQSxLQUFBRSxHQUFBLGlCQUFBRixRQUFBRyxXQUFBLE9BQUFILEVBQ0EsSUFBQUksRUFBQVgsT0FBQVksT0FBQSxNQUdBLEdBRkExQixFQUFBa0IsRUFBQU8sR0FDQVgsT0FBQUMsZUFBQVUsRUFBQSxXQUF5Q1QsWUFBQSxFQUFBSyxVQUN6QyxFQUFBRSxHQUFBLGlCQUFBRixFQUFBLFFBQUFNLEtBQUFOLEVBQUFyQixFQUFBVSxFQUFBZSxFQUFBRSxFQUFBLFNBQUFBLEdBQWdILE9BQUFOLEVBQUFNLElBQXFCQyxLQUFBLEtBQUFELElBQ3JJLE9BQUFGLEdBSUF6QixFQUFBNkIsRUFBQSxTQUFBMUIsR0FDQSxJQUFBUyxFQUFBVCxLQUFBcUIsV0FDQSxXQUEyQixPQUFBckIsRUFBQSxTQUMzQixXQUFpQyxPQUFBQSxHQUVqQyxPQURBSCxFQUFBVSxFQUFBRSxFQUFBLElBQUFBLEdBQ0FBLEdBSUFaLEVBQUFhLEVBQUEsU0FBQWlCLEVBQUFDLEdBQXNELE9BQUFqQixPQUFBa0IsVUFBQUMsZUFBQTFCLEtBQUF1QixFQUFBQyxJQUd0RC9CLEVBQUFrQyxFQUFBLEdBSUFsQyxJQUFBbUMsRUFBQSxxQkNqRkEsSUFBQUMsRUFBQXBDLEVBQUEsR0FFQSxpQkFBQW9DLFFBQUFqQyxFQUFBQyxFQUFBZ0MsRUFBQSxNQU9BLElBQUFDLEdBQWVDLEtBQUEsRUFFZkMsZUFQQUEsRUFRQUMsZ0JBQUFDLEdBRUF6QyxFQUFBLEVBQUFBLENBQUFvQyxFQUFBQyxHQUVBRCxFQUFBTSxTQUFBdkMsRUFBQUQsUUFBQWtDLEVBQUFNLDBCQ2pCQXZDLEVBQUFELFFBQUFGLEVBQUEsRUFBQUEsRUFBQSxJQUtBMkMsTUFBQXhDLEVBQUFDLEVBQUEsNGxOQUFtbk4sb0JDQW5uTkQsRUFBQUQsUUFBQSxTQUFBMEMsR0FDQSxJQUFBQyxLQXdDQSxPQXJDQUEsRUFBQUMsU0FBQSxXQUNBLE9BQUFDLEtBQUFDLElBQUEsU0FBQUMsR0FDQSxJQUFBYixFQXNDQSxTQUFBYSxFQUFBTCxHQUNBLElBQUFSLEVBQUFhLEVBQUEsT0FDQUMsRUFBQUQsRUFBQSxHQUNBLElBQUFDLEVBQ0EsT0FBQWQsRUFHQSxHQUFBUSxHQUFBLG1CQUFBTyxLQUFBLENBQ0EsSUFBQUMsRUFZQSxTQUFBQyxHQUtBLHlFQUhBRixLQUFBRyxTQUFBQyxtQkFBQUMsS0FBQUMsVUFBQUosTUFHQSxNQWpCQUssQ0FBQVIsR0FDQVMsRUFBQVQsRUFBQVUsUUFBQVosSUFBQSxTQUFBYSxHQUNBLHVCQUFBWCxFQUFBWSxXQUFBRCxFQUFBLFFBR0EsT0FBQXpCLEdBQUEyQixPQUFBSixHQUFBSSxRQUFBWCxJQUFBWSxLQUFBLE1BR0EsT0FBQTVCLEdBQUE0QixLQUFBLE1BdERBQyxDQUFBaEIsRUFBQUwsR0FDQSxPQUFBSyxFQUFBLEdBQ0EsVUFBQUEsRUFBQSxPQUFtQ2IsRUFBQSxJQUVuQ0EsSUFFRzRCLEtBQUEsS0FJSG5CLEVBQUF6QyxFQUFBLFNBQUFFLEVBQUE0RCxHQUNBLGlCQUFBNUQsSUFDQUEsSUFBQSxLQUFBQSxFQUFBLE1BRUEsSUFEQSxJQUFBNkQsS0FDQS9ELEVBQUEsRUFBZ0JBLEVBQUEyQyxLQUFBcUIsT0FBaUJoRSxJQUFBLENBQ2pDLElBQUFpRSxFQUFBdEIsS0FBQTNDLEdBQUEsR0FDQSxpQkFBQWlFLElBQ0FGLEVBQUFFLElBQUEsR0FFQSxJQUFBakUsRUFBQSxFQUFZQSxFQUFBRSxFQUFBOEQsT0FBb0JoRSxJQUFBLENBQ2hDLElBQUE2QyxFQUFBM0MsRUFBQUYsR0FLQSxpQkFBQTZDLEVBQUEsSUFBQWtCLEVBQUFsQixFQUFBLE1BQ0FpQixJQUFBakIsRUFBQSxHQUNBQSxFQUFBLEdBQUFpQixFQUNLQSxJQUNMakIsRUFBQSxPQUFBQSxFQUFBLGFBQUFpQixFQUFBLEtBRUFyQixFQUFBRixLQUFBTSxNQUlBSixvQkN6Q0EsSUFBQXlCLEtBV0FDLEVBVEEsU0FBQUMsR0FDQSxJQUFBQyxFQUVBLGtCQUVBLFlBREEsSUFBQUEsTUFBQUQsRUFBQUUsTUFBQTNCLEtBQUE0QixZQUNBRixHQUlBRyxDQUFBLFdBTUEsT0FBQUMsUUFBQUMsbUJBQUFDLE1BQUFGLE9BQUFHLE9BT0FDLEVBQUEsU0FBQVQsR0FDQSxJQUFBQyxLQUVBLGdCQUFBUyxHQU1BLHNCQUFBQSxFQUNBLE9BQUFBLElBRUEsWUFBQVQsRUFBQVMsR0FBQSxDQUNBLElBQUFDLEVBakJBLFNBQUFELEdBQ0EsT0FBQUosU0FBQU0sY0FBQUYsSUFnQkEzRSxLQUFBd0MsS0FBQW1DLEdBRUEsR0FBQUwsT0FBQVEsbUJBQUFGLGFBQUFOLE9BQUFRLGtCQUNBLElBR0FGLElBQUFHLGdCQUFBQyxLQUNLLE1BQUFDLEdBQ0xMLEVBQUEsS0FHQVYsRUFBQVMsR0FBQUMsRUFFQSxPQUFBVixFQUFBUyxJQTFCQSxHQThCQU8sRUFBQSxLQUNBQyxFQUFBLEVBQ0FDLEtBRUFDLEVBQUE1RixFQUFBLEdBcURBLFNBQUE2RixFQUFBQyxFQUFBekQsR0FDQSxRQUFBakMsRUFBQSxFQUFnQkEsRUFBQTBGLEVBQUExQixPQUFtQmhFLElBQUEsQ0FDbkMsSUFBQTZDLEVBQUE2QyxFQUFBMUYsR0FDQTJGLEVBQUF6QixFQUFBckIsRUFBQW9CLElBRUEsR0FBQTBCLEVBQUEsQ0FDQUEsRUFBQUMsT0FFQSxRQUFBQyxFQUFBLEVBQWlCQSxFQUFBRixFQUFBRyxNQUFBOUIsT0FBMkI2QixJQUM1Q0YsRUFBQUcsTUFBQUQsR0FBQWhELEVBQUFpRCxNQUFBRCxJQUdBLEtBQVFBLEVBQUFoRCxFQUFBaUQsTUFBQTlCLE9BQXVCNkIsSUFDL0JGLEVBQUFHLE1BQUF2RCxLQUFBd0QsRUFBQWxELEVBQUFpRCxNQUFBRCxHQUFBNUQsUUFFRyxDQUNILElBQUE2RCxLQUVBLElBQUFELEVBQUEsRUFBaUJBLEVBQUFoRCxFQUFBaUQsTUFBQTlCLE9BQXVCNkIsSUFDeENDLEVBQUF2RCxLQUFBd0QsRUFBQWxELEVBQUFpRCxNQUFBRCxHQUFBNUQsSUFHQWlDLEVBQUFyQixFQUFBb0IsS0FBMkJBLEdBQUFwQixFQUFBb0IsR0FBQTJCLEtBQUEsRUFBQUUsV0FLM0IsU0FBQUUsRUFBQXZELEVBQUFSLEdBSUEsSUFIQSxJQUFBeUQsS0FDQU8sS0FFQWpHLEVBQUEsRUFBZ0JBLEVBQUF5QyxFQUFBdUIsT0FBaUJoRSxJQUFBLENBQ2pDLElBQUE2QyxFQUFBSixFQUFBekMsR0FDQWlFLEVBQUFoQyxFQUFBaUUsS0FBQXJELEVBQUEsR0FBQVosRUFBQWlFLEtBQUFyRCxFQUFBLEdBSUFzRCxHQUFjQyxJQUhkdkQsRUFBQSxHQUdjd0QsTUFGZHhELEVBQUEsR0FFY0ksVUFEZEosRUFBQSxJQUdBb0QsRUFBQWhDLEdBQ0FnQyxFQUFBaEMsR0FBQTZCLE1BQUF2RCxLQUFBNEQsR0FEQVQsRUFBQW5ELEtBQUEwRCxFQUFBaEMsSUFBa0RBLEtBQUE2QixPQUFBSyxLQUlsRCxPQUFBVCxFQUdBLFNBQUFZLEVBQUFyRSxFQUFBc0UsR0FDQSxJQUFBekIsRUFBQUQsRUFBQTVDLEVBQUFHLFlBRUEsSUFBQTBDLEVBQ0EsVUFBQTBCLE1BQUEsK0dBR0EsSUFBQUMsRUFBQWxCLElBQUF2QixPQUFBLEdBRUEsV0FBQS9CLEVBQUF5RSxTQUNBRCxFQUVHQSxFQUFBRSxZQUNIN0IsRUFBQThCLGFBQUFMLEVBQUFFLEVBQUFFLGFBRUE3QixFQUFBK0IsWUFBQU4sR0FKQXpCLEVBQUE4QixhQUFBTCxFQUFBekIsRUFBQWdDLFlBTUF2QixFQUFBaEQsS0FBQWdFLFFBQ0UsY0FBQXRFLEVBQUF5RSxTQUNGNUIsRUFBQStCLFlBQUFOLE9BQ0UscUJBQUF0RSxFQUFBeUUsV0FBQXpFLEVBQUF5RSxTQUFBSyxPQUlGLFVBQUFQLE1BQUEsOExBSEEsSUFBQUcsRUFBQTlCLEVBQUE1QyxFQUFBRyxXQUFBLElBQUFILEVBQUF5RSxTQUFBSyxRQUNBakMsRUFBQThCLGFBQUFMLEVBQUFJLElBTUEsU0FBQUssRUFBQVQsR0FDQSxVQUFBQSxFQUFBVSxXQUFBLFNBQ0FWLEVBQUFVLFdBQUFDLFlBQUFYLEdBRUEsSUFBQVksRUFBQTVCLEVBQUE2QixRQUFBYixHQUNBWSxHQUFBLEdBQ0E1QixFQUFBOEIsT0FBQUYsRUFBQSxHQUlBLFNBQUFHLEVBQUFyRixHQUNBLElBQUFzRSxFQUFBN0IsU0FBQTZDLGNBQUEsU0FTQSxZQVBBbEYsSUFBQUosRUFBQXVGLE1BQUFDLE9BQ0F4RixFQUFBdUYsTUFBQUMsS0FBQSxZQUdBQyxFQUFBbkIsRUFBQXRFLEVBQUF1RixPQUNBbEIsRUFBQXJFLEVBQUFzRSxHQUVBQSxFQWlCQSxTQUFBbUIsRUFBQUMsRUFBQUgsR0FDQTlHLE9BQUFrSCxLQUFBSixHQUFBSyxRQUFBLFNBQUF0RyxHQUNBb0csRUFBQUcsYUFBQXZHLEVBQUFpRyxFQUFBakcsTUFJQSxTQUFBd0UsRUFBQWdDLEVBQUE5RixHQUNBLElBQUFzRSxFQUFBeUIsRUFBQUMsRUFBQUMsRUFHQSxHQUFBakcsRUFBQUUsV0FBQTRGLEVBQUEzQixJQUFBLENBR0EsS0FGQThCLEVBQUFqRyxFQUFBRSxVQUFBNEYsRUFBQTNCLE1BU0Esb0JBSkEyQixFQUFBM0IsSUFBQThCLEVBVUEsR0FBQWpHLEVBQUFvRCxVQUFBLENBQ0EsSUFBQThDLEVBQUE3QyxJQUVBaUIsRUFBQWxCLE1BQUFpQyxFQUFBckYsSUFFQStGLEVBQUFJLEVBQUE1RyxLQUFBLEtBQUErRSxFQUFBNEIsR0FBQSxHQUNBRixFQUFBRyxFQUFBNUcsS0FBQSxLQUFBK0UsRUFBQTRCLEdBQUEsUUFHQUosRUFBQTlFLFdBQ0EsbUJBQUFvRixLQUNBLG1CQUFBQSxJQUFBQyxpQkFDQSxtQkFBQUQsSUFBQUUsaUJBQ0EsbUJBQUFDLE1BQ0EsbUJBQUF6RixNQUVBd0QsRUF4REEsU0FBQXRFLEdBQ0EsSUFBQXdHLEVBQUEvRCxTQUFBNkMsY0FBQSxRQVVBLFlBUkFsRixJQUFBSixFQUFBdUYsTUFBQUMsT0FDQXhGLEVBQUF1RixNQUFBQyxLQUFBLFlBRUF4RixFQUFBdUYsTUFBQWtCLElBQUEsYUFFQWhCLEVBQUFlLEVBQUF4RyxFQUFBdUYsT0FDQWxCLEVBQUFyRSxFQUFBd0csR0FFQUEsRUE2Q0FFLENBQUExRyxHQUNBK0YsRUFpRkEsU0FBQVMsRUFBQXhHLEVBQUE4RixHQUNBLElBQUEzQixFQUFBMkIsRUFBQTNCLElBQ0FuRCxFQUFBOEUsRUFBQTlFLFVBUUEyRixPQUFBdkcsSUFBQUosRUFBQTRHLHVCQUFBNUYsR0FFQWhCLEVBQUE0Ryx1QkFBQUQsS0FDQXhDLEVBQUFaLEVBQUFZLElBR0FuRCxJQUVBbUQsR0FBQSx1REFBdURyRCxLQUFBRyxTQUFBQyxtQkFBQUMsS0FBQUMsVUFBQUosTUFBQSxPQUd2RCxJQUFBNkYsRUFBQSxJQUFBTixNQUFBcEMsSUFBNkJxQixLQUFBLGFBRTdCc0IsRUFBQU4sRUFBQU8sS0FFQVAsRUFBQU8sS0FBQVgsSUFBQUMsZ0JBQUFRLEdBRUFDLEdBQUFWLElBQUFFLGdCQUFBUSxJQTVHQXZILEtBQUEsS0FBQStFLEVBQUF0RSxHQUNBZ0csRUFBQSxXQUNBakIsRUFBQVQsR0FFQUEsRUFBQXlDLE1BQUFYLElBQUFFLGdCQUFBaEMsRUFBQXlDLFNBR0F6QyxFQUFBZSxFQUFBckYsR0FDQStGLEVBc0RBLFNBQUF6QixFQUFBd0IsR0FDQSxJQUFBM0IsRUFBQTJCLEVBQUEzQixJQUNBQyxFQUFBMEIsRUFBQTFCLE1BRUFBLEdBQ0FFLEVBQUF1QixhQUFBLFFBQUF6QixHQUdBLEdBQUFFLEVBQUEwQyxXQUNBMUMsRUFBQTBDLFdBQUFDLFFBQUE5QyxNQUNFLENBQ0YsS0FBQUcsRUFBQU8sWUFDQVAsRUFBQVcsWUFBQVgsRUFBQU8sWUFHQVAsRUFBQU0sWUFBQW5DLFNBQUF5RSxlQUFBL0MsTUFyRUE1RSxLQUFBLEtBQUErRSxHQUNBMEIsRUFBQSxXQUNBakIsRUFBQVQsS0FNQSxPQUZBeUIsRUFBQUQsR0FFQSxTQUFBcUIsR0FDQSxHQUFBQSxFQUFBLENBQ0EsR0FDQUEsRUFBQWhELE1BQUEyQixFQUFBM0IsS0FDQWdELEVBQUEvQyxRQUFBMEIsRUFBQTFCLE9BQ0ErQyxFQUFBbkcsWUFBQThFLEVBQUE5RSxVQUVBLE9BR0ErRSxFQUFBRCxFQUFBcUIsUUFFQW5CLEtBek9BbEksRUFBQUQsUUFBQSxTQUFBMkMsRUFBQVIsR0FDQSx1QkFBQW9ILGNBQ0EsaUJBQUEzRSxTQUFBLFVBQUE4QixNQUFBLGlFQUdBdkUsU0FFQXVGLE1BQUEsaUJBQUF2RixFQUFBdUYsTUFBQXZGLEVBQUF1RixTQUlBdkYsRUFBQW9ELFdBQUEsa0JBQUFwRCxFQUFBb0QsWUFBQXBELEVBQUFvRCxVQUFBbEIsS0FHQWxDLEVBQUFHLGFBQUFILEVBQUFHLFdBQUEsUUFHQUgsRUFBQXlFLFdBQUF6RSxFQUFBeUUsU0FBQSxVQUVBLElBQUFoQixFQUFBTSxFQUFBdkQsRUFBQVIsR0FJQSxPQUZBd0QsRUFBQUMsRUFBQXpELEdBRUEsU0FBQXFILEdBR0EsSUFGQSxJQUFBQyxLQUVBdkosRUFBQSxFQUFpQkEsRUFBQTBGLEVBQUExQixPQUFtQmhFLElBQUEsQ0FDcEMsSUFBQTZDLEVBQUE2QyxFQUFBMUYsSUFDQTJGLEVBQUF6QixFQUFBckIsRUFBQW9CLEtBRUEyQixPQUNBMkQsRUFBQWhILEtBQUFvRCxHQUdBMkQsR0FFQTdELEVBREFPLEVBQUFzRCxFQUFBckgsR0FDQUEsR0FHQSxJQUFBakMsRUFBQSxFQUFpQkEsRUFBQXVKLEVBQUF2RixPQUFzQmhFLElBQUEsQ0FDdkMsSUFBQTJGLEVBRUEsUUFGQUEsRUFBQTRELEVBQUF2SixJQUVBNEYsS0FBQSxDQUNBLFFBQUFDLEVBQUEsRUFBbUJBLEVBQUFGLEVBQUFHLE1BQUE5QixPQUEyQjZCLElBQUFGLEVBQUFHLE1BQUFELFlBRTlDM0IsRUFBQXlCLEVBQUExQixRQWlNQSxJQUFBdUYsRUFBQSxXQUNBLElBQUFDLEtBRUEsZ0JBQUFDLEVBQUFDLEdBR0EsT0FGQUYsRUFBQUMsR0FBQUMsRUFFQUYsRUFBQUcsT0FBQUMsU0FBQWpHLEtBQUEsT0FOQSxHQVVBLFNBQUF3RSxFQUFBN0IsRUFBQW1ELEVBQUF6QixFQUFBRixHQUNBLElBQUEzQixFQUFBNkIsRUFBQSxHQUFBRixFQUFBM0IsSUFFQSxHQUFBRyxFQUFBMEMsV0FDQTFDLEVBQUEwQyxXQUFBQyxRQUFBTSxFQUFBRSxFQUFBdEQsT0FDRSxDQUNGLElBQUEwRCxFQUFBcEYsU0FBQXlFLGVBQUEvQyxHQUNBMkQsRUFBQXhELEVBQUF3RCxXQUVBQSxFQUFBTCxJQUFBbkQsRUFBQVcsWUFBQTZDLEVBQUFMLElBRUFLLEVBQUEvRixPQUNBdUMsRUFBQUssYUFBQWtELEVBQUFDLEVBQUFMLElBRUFuRCxFQUFBTSxZQUFBaUQsb0JDelRBL0osRUFBQUQsUUFBQSxTQUFBc0csR0FFQSxJQUFBNEQsRUFBQSxvQkFBQXZGLGVBQUF1RixTQUVBLElBQUFBLEVBQ0EsVUFBQXhELE1BQUEsb0NBSUEsSUFBQUosR0FBQSxpQkFBQUEsRUFDQSxPQUFBQSxFQUdBLElBQUE2RCxFQUFBRCxFQUFBRSxTQUFBLEtBQUFGLEVBQUFHLEtBQ0FDLEVBQUFILEVBQUFELEVBQUFLLFNBQUFDLFFBQUEsaUJBMkRBLE9BL0JBbEUsRUFBQWtFLFFBQUEsK0RBQUFDLEVBQUFDLEdBRUEsSUFXQUMsRUFYQUMsRUFBQUYsRUFDQUcsT0FDQUwsUUFBQSxvQkFBQTdKLEVBQUFtSyxHQUF3QyxPQUFBQSxJQUN4Q04sUUFBQSxvQkFBQTdKLEVBQUFtSyxHQUF3QyxPQUFBQSxJQUd4QywwREFBQUMsS0FBQUgsR0FDQUgsR0FRQUUsRUFGQSxJQUFBQyxFQUFBdEQsUUFBQSxNQUVBc0QsRUFDRyxJQUFBQSxFQUFBdEQsUUFBQSxLQUVINkMsRUFBQVMsRUFHQU4sRUFBQU0sRUFBQUosUUFBQSxZQUlBLE9BQUFsSCxLQUFBQyxVQUFBb0gsR0FBQSw4Q0NuRkEsTUFBQUssRUFBQSxTQUFBaEcsRUFBQWlHLEVBQUFDLEdBRUEsS0FBQXJJLGdCQUFBbUksR0FDQSxXQUFBQSxFQUFBaEcsRUFBQWlHLEVBQUFDLEdBRUFySSxLQUFBbUMsU0FDQW5DLEtBQUFzSSxTQUNBdEksS0FBQW9JLFlBQ0FwSSxLQUFBcUksZUFDQXJJLEtBQUFwQixJQUFBd0osR0FBQSxLQUNBcEksS0FBQXVJLE1BQUF2SSxLQUFBcUksU0FBQWhILFFBQUEsR0FFQThHLEVBQUFsSixVQUFBdUosT0FBQSxXQUNBLElBQUF4RCxFQUFBakQsU0FBQTZDLGNBQUE1RSxLQUFBbUMsUUFDQWlHLEVBQUFwSSxLQUFBb0ksTUFDQSxRQUFBL0ssS0FBQStLLEVBQ0FwRCxFQUFBRyxhQUFBOUgsRUFBQStLLEVBQUEvSyxJQUVBLFFBQUFBLEVBQUEsRUFBbUJBLEVBQUEyQyxLQUFBdUksTUFBZ0JsTCxJQUFBLENBQ25DLElBQUFvTCxFQUFBekksS0FBQXFJLFNBQUFoTCxhQUFBOEssRUFBQW5JLEtBQUFxSSxTQUFBaEwsR0FBQW1MLFNBQUF6RyxTQUFBeUUsZUFBQXhHLEtBQUFxSSxTQUFBaEwsSUFDQTJILEVBQUEwRCxPQUFBRCxHQUVBLE9BQUF6RCxHQ3JCQSxNQUFBMkQsRUFBQSxJQUFBUixFQUNBLE9BRUFTLE1BQUEsWUFDQWhGLE1BQUEsa0NBRUEsSUFBQXVFLEVBQUEsT0FBdUJTLE1BQUEsOEJBQ3ZCLElBQUFULEVBQUEsT0FBMkJTLE1BQUEsMkJBQzNCLElBQUFULEVBQUEsT0FDQVMsTUFBQSxlQUNBaEYsTUFBQSxvRUFHQSxJQUFBdUUsRUFBQSxPQUEyQlMsTUFBQSw4QkFDM0IsSUFBQVQsRUFBQSxPQUNBUyxNQUFBLGtCQUNBaEYsTUFBQSxvRUFHQSxJQUFBdUUsRUFBQSxPQUEyQlMsTUFBQSw4QkFDM0IsSUFBQVQsRUFBQSxPQUNBUyxNQUFBLGtCQUNBaEYsTUFBQSxzRUFJQSxJQUFBdUUsRUFBQSxPQUF1QlMsTUFBQSxVQUN2QixJQUFBVCxFQUFBLE9BQTJCUyxNQUFBLGNBQUF0SCxHQUFBLGFBQTJDLGNBQ3RFLElBQUE2RyxFQUFBLE9BQTJCUyxNQUFBLGNBQUF0SCxHQUFBLGVBQTZDLHVCQzFCeEUsTUFBQXVILEVBQUEsSUFBQVYsRUFDQSxPQUVBUyxNQUFBLGtCQUNBRSxVQUFBLE1BRUEsSUFBQVgsRUFBQSxvQkFDQSxJQUFBQSxFQUFBLHNCQUNBLElBQUFBLEVBQUEsNEJBQ0EsSUFBQUEsRUFBQSxnQ0FDQSxJQUFBQSxFQUFBLG1DQUNBLElBQUFBLEVBQUEsdUJBQUFBLEVBQUEsS0FBa0Q5QixLQUFBLGlDQUF5QyxtQ0FDM0YsSUFBQThCLEVBQUEsb0RBRUFZLEVBQUEsSUFBQVosRUFBQSxPQUVBUyxNQUFBLGtCQUNBRSxVQUFBLE1BRUEsSUFBQVgsRUFBQSxxQkFDQSxJQUFBQSxFQUFBLHVCQUNBLElBQUFBLEVBQUEsNEdBQ0EsSUFBQUEsRUFBQSwwQ0FDQSxJQUFBQSxFQUFBLDBIQUNBLElBQUFBLEVBQUEsc0JBQUFBLEVBQUEsS0FBaUQ5QixLQUFBLDBDQUFrRCw4Q0FFbkcyQyxFQUFBLElBQUFiLEVBQ0EsT0FFQVMsTUFBQSxrQkFDQUUsVUFBQSxNQUVBLElBQUFYLEVBQUEsb0JBQ0EsSUFBQUEsRUFBQSx3REFDQSxJQUFBQSxFQUFBLHNDQUNBLElBQUFBLEVBQUEscUNBQ0EsSUFBQUEsRUFBQSxvQ0FFQWMsRUFBQSxJQUFBZCxFQUNBLE9BRUFTLE1BQUEsa0JBQ0FFLFVBQUEsTUFFQSxJQUFBWCxFQUFBLGlDQUNBLElBQUFBLEVBQUEsbUNBQ0EsSUFBQUEsRUFBQSx1Q0FDQSxJQUFBQSxFQUFBLHNCQUFBQSxFQUFBLEtBQWlEOUIsS0FBQSxLQUFhLFlBRzlENkMsRUFBQSxJQUFBZixFQUNBLFFBRUF2SyxLQUFBLFdBQ0F5QixRQUFBLCtEQUdBOEosRUFBQSxJQUFBaEIsRUFDQSxPQUFZUyxNQUFBLHFCQUE0QkMsRUFBQUUsRUFBQUMsRUFBQUMsSUFFeENsSCxTQUFBUyxLQUFBMEIsWUFBQWdGLEVBQUFWLFVBQ0F6RyxTQUFBcUgsS0FBQWxGLFlBQUF5RSxFQUFBSCxVQUNBekcsU0FBQXFILEtBQUFsRixZQUFBaUYsRUFBQVgiLCJmaWxlIjoiYXBwLmJ1bmR1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNik7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9pbmRleC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIip7XFxyXFxuICAgIG1hcmdpbjogMHB4O1xcclxcbiAgICBwYWRkaW5nOiAwcHg7XFxyXFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiQXZlbmlyXFxcIiwgJ0hlbHZldGljYSBOZXVlJywgJ0xhdG8nLCAnU2Vnb2UgVUknLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xcclxcbiAgICBjb2xvcjojMjIyXFxyXFxufVxcclxcbmJvZHl7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXg6IDE7XFxyXFxufVxcclxcbi50aW1lRmxhZ3tcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICByaWdodDogMzBweDtcXHJcXG4gICAgdG9wOiAzMHB4O1xcclxcbn1cXHJcXG4vKiBjb250cm9sIGJ1dHRvbiAqL1xcclxcbi5jb250cm9sQm94e1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICAgIGhlaWdodDogNDRweDtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGJvdHRvbTogMHB4IDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcbi5jb250cm9sQnRuIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleDogMTtcXHJcXG4gICAgLyogZmxleC1iYXNpczogMTAlOyAqL1xcclxcbiAgICBtYXJnaW46IDVweDtcXHJcXG4gICAgaGVpZ2h0OiA0MHB4O1xcclxcbn1cXHJcXG4vKiDokpnniYggKi9cXHJcXG4uc3RhcnRNYXNre1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICB0b3A6IDBweDtcXHJcXG4gICAgbGVmdDogMHB4O1xcclxcbn1cXHJcXG4uY2hvc2V7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBmbGV4OiAxO1xcclxcbiAgICBoZWlnaHQ6IGF1dG87XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICB6LWluZGV4OiAzMDtcXHJcXG59XFxyXFxuLmNob3NlQnV0dG9ue1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBoZWlnaHQ6IDEyMHB4O1xcclxcbiAgICB3aWR0aDogMTIwcHg7XFxyXFxuICAgIG1hcmdpbjogMjBweDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY5Mik7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcXHJcXG59XFxyXFxuLmNob3NlQnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42OTIpXFxyXFxufVxcclxcbi8qIOiSmeeJiOWGheazoua1quWKqOeUuyAqL1xcclxcbkBrZXlmcmFtZXMgbW92ZV93YXZlIHtcXHJcXG4gICAgMCUge1xcclxcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApIHRyYW5zbGF0ZVooMCkgc2NhbGVZKDEpXFxyXFxuICAgIH1cXHJcXG4gICAgNTAlIHtcXHJcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjUlKSB0cmFuc2xhdGVaKDApIHNjYWxlWSgwLjU1KVxcclxcbiAgICB9XFxyXFxuICAgIDEwMCUge1xcclxcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVooMCkgc2NhbGVZKDEpXFxyXFxuICAgIH1cXHJcXG59XFxyXFxuQC13ZWJraXQta2V5ZnJhbWVzIG1vdmVfd2F2ZSB7XFxyXFxuICAgIDAlIHtcXHJcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKSB0cmFuc2xhdGVaKDApIHNjYWxlWSgxKVxcclxcbiAgICB9XFxyXFxuICAgIDUwJSB7XFxyXFxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTI1JSkgdHJhbnNsYXRlWigwKSBzY2FsZVkoMC41NSlcXHJcXG4gICAgfVxcclxcbiAgICAxMDAlIHtcXHJcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVaKDApIHNjYWxlWSgxKVxcclxcbiAgICB9XFxyXFxufVxcclxcbi53YXZlV3JhcHBlciB7XFxyXFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgbGVmdDogMDtcXHJcXG4gICAgcmlnaHQ6IDA7XFxyXFxuICAgIGJvdHRvbTogMDtcXHJcXG4gICAgdG9wOiAwO1xcclxcbiAgICBtYXJnaW46IGF1dG87XFxyXFxufVxcclxcbi53YXZlV3JhcHBlcklubmVyIHtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBib3R0b206IC0xcHg7XFxyXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICM4NjM3N2IgMjAlLCAjMjcyNzNjIDgwJSk7XFxyXFxufVxcclxcbi5iZ1RvcCB7XFxyXFxuICAgIHotaW5kZXg6IDE1O1xcclxcbiAgICBvcGFjaXR5OiAwLjU7XFxyXFxufVxcclxcbi5iZ01pZGRsZSB7XFxyXFxuICAgIHotaW5kZXg6IDEwO1xcclxcbiAgICBvcGFjaXR5OiAwLjc1O1xcclxcbn1cXHJcXG4uYmdCb3R0b20ge1xcclxcbiAgICB6LWluZGV4OiA1O1xcclxcbn1cXHJcXG4ud2F2ZSB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgbGVmdDogMDtcXHJcXG4gICAgd2lkdGg6IDIwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdCBuby1yZXBlYXQ7XFxyXFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgYm90dG9tO1xcclxcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xcclxcbn1cXHJcXG4ud2F2ZVRvcCB7XFxyXFxuICAgIGJhY2tncm91bmQtc2l6ZTogNTAlIDEwMHB4O1xcclxcbn1cXHJcXG4ud2F2ZUFuaW1hdGlvbiAud2F2ZVRvcCB7XFxyXFxuICBhbmltYXRpb246IG1vdmUtd2F2ZSAzcztcXHJcXG4gICAtd2Via2l0LWFuaW1hdGlvbjogbW92ZS13YXZlIDNzO1xcclxcbiAgIC13ZWJraXQtYW5pbWF0aW9uLWRlbGF5OiAxcztcXHJcXG4gICBhbmltYXRpb24tZGVsYXk6IDFzO1xcclxcbn1cXHJcXG4ud2F2ZU1pZGRsZSB7XFxyXFxuICAgIGJhY2tncm91bmQtc2l6ZTogNTAlIDEyMHB4O1xcclxcbn1cXHJcXG4ud2F2ZUFuaW1hdGlvbiAud2F2ZU1pZGRsZSB7XFxyXFxuICAgIGFuaW1hdGlvbjogbW92ZV93YXZlIDEwcyBsaW5lYXIgaW5maW5pdGU7XFxyXFxufVxcclxcbi53YXZlQm90dG9tIHtcXHJcXG4gICAgYmFja2dyb3VuZC1zaXplOiA1MCUgMTAwcHg7XFxyXFxufVxcclxcbi53YXZlQW5pbWF0aW9uIC53YXZlQm90dG9tIHtcXHJcXG4gICAgYW5pbWF0aW9uOiBtb3ZlX3dhdmUgMTVzIGxpbmVhciBpbmZpbml0ZTtcXHJcXG59XFxyXFxuLyrnroDljobkuLvkvZPlhoXlrrkqL1xcclxcbi8qIC5kZXNjcmlwdGlvbkdyb3Vwe1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIHRvcDowcHg7XFxyXFxuICAgIGxlZnQ6IDBweDtcXHJcXG59ICovXFxyXFxuLmRlc2NyaXB0aW9uQWN0aW9ue1xcclxcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XFxyXFxuICAgIG1hcmdpbi10b3A6MHB4ICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6NDE1cHgpXFxyXFxuey5kZXNjcmlwdGlvbkl0ZW17XFxyXFxuICAgIGhlaWdodDogYXV0bztcXHJcXG4gICAgd2lkdGg6IGF1dG87XFxyXFxuICAgIG9wYWNpdHk6IDA7XFxyXFxuICAgIG1hcmdpbi10b3A6MjAwcHg7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcbi5kZXNjcmlwdGlvbkl0ZW0gaDJ7XFxyXFxuICAgIGZvbnQtc2l6ZTogM2VtO1xcclxcbiAgICBmb250LXdlaWdodDpub3JtYWw7XFxyXFxuICAgIG1hcmdpbi10b3A6NyU7XFxyXFxuICAgIHBhZGRpbmctbGVmdDoxMDBweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbToyMHB4OyAgIFxcclxcbn1cXHJcXG4uZGVzY3JpcHRpb25JdGVtIGgze1xcclxcbiAgICBmb250LXNpemU6IDEuODVlbTtcXHJcXG4gICAgcGFkZGluZy1sZWZ0OjEwMHB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAwLjI1ZW07XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtOyAgXFxyXFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7ICAgXFxyXFxuICAgIGNvbG9yOiAjNjg1ODg0O1xcclxcbn1cXHJcXG4uZGVzY3JpcHRpb25JdGVtIGF7XFxyXFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gICAgY29sb3I6ICM1QzVFREM7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcbi5kZXNjcmlwdGlvbkl0ZW0gcHJlLC5kZXNjcmlwdGlvbkl0ZW0gcHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjI1ZW07XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XFxyXFxuICAgIHBhZGRpbmctbGVmdDoxMDBweDtcXHJcXG4gICAgcGFkZGluZy1yaWdodDoxMDBweDsgXFxyXFxufVxcclxcbi5kZXNjcmlwdGlvbkl0ZW06bGFzdC1jaGlsZCBwe1xcclxcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcXHJcXG4gICAgbWFyZ2luLXRvcDogMjAwcHg7XFxyXFxufX1cXHJcXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQxNHB4KVxcclxcbnsuZGVzY3JpcHRpb25JdGVte1xcclxcbiAgICBoZWlnaHQ6IGF1dG87XFxyXFxuICAgIHdpZHRoOiAxMDAlO1xcclxcbiAgICBvcGFjaXR5OiAwO1xcclxcbiAgICBtYXJnaW4tdG9wOjIwMHB4O1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG4uZGVzY3JpcHRpb25JdGVtIGgye1xcclxcbiAgICBmb250LXNpemU6IDJlbTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcXHJcXG4gICAgZm9udC13ZWlnaHQ6bm9ybWFsO1xcclxcbiAgICBtYXJnaW4tdG9wOjclO1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6MjBweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbToyMHB4OyAgIFxcclxcbn1cXHJcXG4uZGVzY3JpcHRpb25JdGVtIGgze1xcclxcbiAgICBmb250LXNpemU6IDEuNWVtO1xcclxcbiAgICAvKiB3aWR0aDogMTAwJTsgKi9cXHJcXG4gICAgcGFkZGluZy1sZWZ0OjUlO1xcclxcbiAgICBwYWRkaW5nLXJpZ2h0OjUlO1xcclxcbiAgICBtYXJnaW4tdG9wOiAwLjI1ZW07XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDAuNWVtOyAgXFxyXFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7ICAgXFxyXFxuICAgIGNvbG9yOiAjNjg1ODg0O1xcclxcbn1cXHJcXG4uZGVzY3JpcHRpb25JdGVtIGF7XFxyXFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gICAgY29sb3I6ICM1QzVFREM7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxufVxcclxcbi5kZXNjcmlwdGlvbkl0ZW0gcHJlLC5kZXNjcmlwdGlvbkl0ZW0gcHtcXHJcXG4gICAgZm9udC1zaXplOiAxLjI1ZW07XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XFxyXFxuICAgIHBhZGRpbmctbGVmdDo1JTtcXHJcXG4gICAgcGFkZGluZy1yaWdodDo1JTtcXHJcXG4gICAgLyogd2lkdGg6IDEwMCU7ICovXFxyXFxufVxcclxcbi5kZXNjcmlwdGlvbkl0ZW06bGFzdC1jaGlsZCBwe1xcclxcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcXHJcXG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcXHJcXG59fVxcclxcbi5kZXNjcmlwdGlvbkFjdGlvbkFuaW1hdGlvbntcXHJcXG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcXHJcXG4gICAgYW5pbWF0aW9uOiBkZXNjcmlwdGlvbkl0ZW1BY3Rpb24gMTUwMG1zO1xcclxcbn1cXHJcXG5Aa2V5ZnJhbWVzIGRlc2NyaXB0aW9uSXRlbUFjdGlvbntcXHJcXG4gICAgMCV7XFxyXFxuICAgICAgICBvcGFjaXR5OiAwO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDoyMDBweDtcXHJcXG4gICAgfVxcclxcbiAgICA1MCV7XFxyXFxuICAgICAgICAvKiBvcGFjaXR5OiAwLjU7ICovXFxyXFxuICAgICAgICAvKiBtYXJnaW4tdG9wOjE2NXB4OyAqL1xcclxcbiAgICB9XFxyXFxuICAgIDEwMCV7XFxyXFxuICAgICAgICBvcGFjaXR5OiAxO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDowcHg7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuQC13ZWJraXQta2V5ZnJhbWVzIGRlc2NyaXB0aW9uSXRlbUFjdGlvbntcXHJcXG4gICAgMCV7XFxyXFxuICAgICAgICBvcGFjaXR5OiAwO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDoyMDBweDtcXHJcXG4gICAgfVxcclxcbiAgICA1MCV7XFxyXFxuICAgICAgICBvcGFjaXR5OiAwLjU7XFxyXFxuICAgICAgICAvKiBtYXJnaW4tdG9wOjE2NXB4OyAqL1xcclxcbiAgICB9XFxyXFxuICAgIDEwMCV7XFxyXFxuICAgICAgICBvcGFjaXR5OiAxO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDowcHg7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuLmRlc2NyaXB0aW9uU3dpdGNoQW5pbWF0aW9ue1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIC8qIGxlZnQ6MTAlOyAqL1xcclxcbiAgICBhbmltYXRpb246IGRlc2NyaXB0aW9uU3dpdGNoIDE1MDBtcztcXHJcXG59XFxyXFxuQGtleWZyYW1lcyBkZXNjcmlwdGlvblN3aXRjaHtcXHJcXG4gICAgMCV7XFxyXFxuICAgICAgICBvcGFjaXR5OiAxO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDowcHg7XFxyXFxuICAgIH1cXHJcXG4gICAgNTAle1xcclxcbiAgICAgICAgLyogb3BhY2l0eTogMC41OyAqL1xcclxcbiAgICAgICAgLyogbWFyZ2luLXRvcDoxNjVweDsgKi9cXHJcXG4gICAgfVxcclxcbiAgICAxMDAle1xcclxcbiAgICAgICAgXFxyXFxuICAgICAgICBvcGFjaXR5OiAwO1xcclxcbiAgICAgICAgbWFyZ2luLXRvcDotMjAwcHg7XFxyXFxuICAgIH1cXHJcXG59XFxyXFxuQC13ZWJraXQta2V5ZnJhbWVzIGRlc2NyaXB0aW9uU3dpdGNoe1xcclxcbiAgICAwJXtcXHJcXG4gICAgICAgIG9wYWNpdHk6IDE7XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOjBweDtcXHJcXG4gICAgfVxcclxcbiAgICA1MCUge1xcclxcbiAgICAvKiBvcGFjaXR5OiAwLjU7ICovXFxyXFxuICAgIC8qIG1hcmdpbi10b3A6MTY1cHg7ICovXFxyXFxuICAgIH1cXHJcXG4gICAgMTAwJXtcXHJcXG4gICAgICAgIG9wYWNpdHk6IDA7XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOi0yMDBweDtcXHJcXG4gICAgfVxcclxcbn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvICsgXCIgXCIgKyBvcHRpb25zLmluc2VydEF0LmJlZm9yZSk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKTtcblxuXHQgICAgaWYgKHJlc3VsdCkge1xuXHQgICAgXHQvLyBJZiB0cmFuc2Zvcm0gcmV0dXJucyBhIHZhbHVlLCB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBvcmlnaW5hbCBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIHJ1bm5pbmcgcnVudGltZSB0cmFuc2Zvcm1hdGlvbnMgb24gdGhlIGNzcy5cblx0ICAgIFx0b2JqLmNzcyA9IHJlc3VsdDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICBcdC8vIElmIHRoZSB0cmFuc2Zvcm0gZnVuY3Rpb24gcmV0dXJucyBhIGZhbHN5IHZhbHVlLCBkb24ndCBhZGQgdGhpcyBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIGNvbmRpdGlvbmFsIGxvYWRpbmcgb2YgY3NzXG5cdCAgICBcdHJldHVybiBmdW5jdGlvbigpIHtcblx0ICAgIFx0XHQvLyBub29wXG5cdCAgICBcdH07XG5cdCAgICB9XG5cdH1cblxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcblx0XHR2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcblxuXHRcdHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuXG5cdFx0dXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcblxuXHR9IGVsc2UgaWYgKFxuXHRcdG9iai5zb3VyY2VNYXAgJiZcblx0XHR0eXBlb2YgVVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiXG5cdCkge1xuXHRcdHN0eWxlID0gY3JlYXRlTGlua0VsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gdXBkYXRlTGluay5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXG5cdFx0XHRpZihzdHlsZS5ocmVmKSBVUkwucmV2b2tlT2JqZWN0VVJMKHN0eWxlLmhyZWYpO1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXHRcdH07XG5cdH1cblxuXHR1cGRhdGUob2JqKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG5ld09iaikge1xuXHRcdGlmIChuZXdPYmopIHtcblx0XHRcdGlmIChcblx0XHRcdFx0bmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJlxuXHRcdFx0XHRuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJlxuXHRcdFx0XHRuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR1cGRhdGUob2JqID0gbmV3T2JqKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVtb3ZlKCk7XG5cdFx0fVxuXHR9O1xufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgdGV4dFN0b3JlID0gW107XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG5cblx0XHRyZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcblx0fTtcbn0pKCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcgKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcblx0dmFyIGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmouY3NzO1xuXG5cdGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuXHRcdGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG5cdFx0XHRzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyAoc3R5bGUsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuXG5cdGlmKG1lZGlhKSB7XG5cdFx0c3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpXG5cdH1cblxuXHRpZihzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuXHR9IGVsc2Uge1xuXHRcdHdoaWxlKHN0eWxlLmZpcnN0Q2hpbGQpIHtcblx0XHRcdHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuXHRcdH1cblxuXHRcdHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxpbmsgKGxpbmssIG9wdGlvbnMsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cblx0Lypcblx0XHRJZiBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgaXNuJ3QgZGVmaW5lZCwgYnV0IHNvdXJjZW1hcHMgYXJlIGVuYWJsZWRcblx0XHRhbmQgdGhlcmUgaXMgbm8gcHVibGljUGF0aCBkZWZpbmVkIHRoZW4gbGV0cyB0dXJuIGNvbnZlcnRUb0Fic29sdXRlVXJsc1xuXHRcdG9uIGJ5IGRlZmF1bHQuICBPdGhlcndpc2UgZGVmYXVsdCB0byB0aGUgY29udmVydFRvQWJzb2x1dGVVcmxzIG9wdGlvblxuXHRcdGRpcmVjdGx5XG5cdCovXG5cdHZhciBhdXRvRml4VXJscyA9IG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzID09PSB1bmRlZmluZWQgJiYgc291cmNlTWFwO1xuXG5cdGlmIChvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyB8fCBhdXRvRml4VXJscykge1xuXHRcdGNzcyA9IGZpeFVybHMoY3NzKTtcblx0fVxuXG5cdGlmIChzb3VyY2VNYXApIHtcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcblx0fVxuXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xuXG5cdHZhciBvbGRTcmMgPSBsaW5rLmhyZWY7XG5cblx0bGluay5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblxuXHRpZihvbGRTcmMpIFVSTC5yZXZva2VPYmplY3RVUkwob2xkU3JjKTtcbn1cbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiZXhwb3J0IGNvbnN0IHZkID0gZnVuY3Rpb24gKHRhcmdldCwgcHJvcHMsIGNoaWxkcmVuKSB7XHJcbiAgICAvL+WPquiDvemAmui/h25ldyB2ZCDosIPnlKhcclxuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiB2ZCkpIHtcclxuICAgICAgICByZXR1cm4gbmV3IHZkKHRhcmdldCwgcHJvcHMsIGNoaWxkcmVuKTtcclxuICAgIH1cclxuICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xyXG4gICAgdGhpcy5zdGF0ZSA9IHt9O1xyXG4gICAgdGhpcy5wcm9wcyA9IHByb3BzIHx8IHt9O1xyXG4gICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuIHx8IFtdO1xyXG4gICAgdGhpcy5rZXkgPSBwcm9wcyA/IHByb3BzIDogbnVsbDtcclxuICAgIHRoaXMuY291bnQgPSB0aGlzLmNoaWxkcmVuLmxlbmd0aCB8fCAwO1xyXG59XHJcbnZkLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBsZXQgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRoaXMudGFyZ2V0KTtcclxuICAgIGxldCBwcm9wcyA9IHRoaXMucHJvcHM7XHJcbiAgICBmb3IgKGxldCBpIGluIHByb3BzKSB7XHJcbiAgICAgICAgZWwuc2V0QXR0cmlidXRlKGksIHByb3BzW2ldKTtcclxuICAgIH1cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jb3VudDsgaSsrKSB7XHJcbiAgICAgICAgbGV0IHRlbXBFbGVtZW50ID0gdGhpcy5jaGlsZHJlbltpXSBpbnN0YW5jZW9mIHZkID8gdGhpcy5jaGlsZHJlbltpXS5yZW5kZXIoKSA6IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRoaXMuY2hpbGRyZW5baV0pO1xyXG4gICAgICAgIGVsLmFwcGVuZCh0ZW1wRWxlbWVudCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZWw7XHJcbn1cclxuIiwiaW1wb3J0IHsgdmQgfSBmcm9tICcuLi92aXJ0dWFsX2RvbV9hcGkvdmlydHVhbF9kb20nO1xyXG5leHBvcnQgY29uc3QgbWFzayA9IG5ldyB2ZChcclxuICAgICdkaXYnLFxyXG4gICAge1xyXG4gICAgICAgICdjbGFzcyc6ICdzdGFydE1hc2snLFxyXG4gICAgICAgICdzdHlsZSc6ICdoZWlnaHQ6IDY3MHB4OyB3aWR0aDogMTM2NHB4OydcclxuICAgIH0sIFtcclxuICAgICAgICBuZXcgdmQoJ2RpdicsIHsgJ2NsYXNzJzogXCJ3YXZlV3JhcHBlciB3YXZlQW5pbWF0aW9uXCIgfSwgW1xyXG4gICAgICAgICAgICBuZXcgdmQoJ2RpdicsIHsgJ2NsYXNzJzogJ3dhdmVXcmFwcGVySW5uZXIgYmdUb3AnIH0sIFtcclxuICAgICAgICAgICAgICAgIG5ldyB2ZCgnZGl2Jywge1xyXG4gICAgICAgICAgICAgICAgICAgICdjbGFzcyc6ICd3YXZlIHdhdmVUb3AnLFxyXG4gICAgICAgICAgICAgICAgICAgICdzdHlsZSc6ICdiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJodHRwOi8vanEyMi5xaW5pdWRuLmNvbS93YXZlLXRvcC5wbmdcIiknXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBdKSxcclxuICAgICAgICAgICAgbmV3IHZkKCdkaXYnLCB7ICdjbGFzcyc6ICd3YXZlV3JhcHBlcklubmVyIGJnTWlkZGxlJyB9LCBbXHJcbiAgICAgICAgICAgICAgICBuZXcgdmQoJ2RpdicsIHtcclxuICAgICAgICAgICAgICAgICAgICAnY2xhc3MnOiAnd2F2ZSB3YXZlTWlkZGxlJyxcclxuICAgICAgICAgICAgICAgICAgICAnc3R5bGUnOiAnYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cDovL2pxMjIucWluaXVkbi5jb20vd2F2ZS1taWQucG5nXCIpJ1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXSksXHJcbiAgICAgICAgICAgIG5ldyB2ZCgnZGl2JywgeyAnY2xhc3MnOiAnd2F2ZVdyYXBwZXJJbm5lciBiZ0JvdHRvbScgfSwgW1xyXG4gICAgICAgICAgICAgICAgbmV3IHZkKCdkaXYnLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ2NsYXNzJzogJ3dhdmUgd2F2ZUJvdHRvbScsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3N0eWxlJzogJ2JhY2tncm91bmQtaW1hZ2U6IHVybChcImh0dHA6Ly9qcTIyLnFpbml1ZG4uY29tL3dhdmUtYm90LnBuZ1wiKSdcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIF0pLFxyXG4gICAgICAgIF0pLFxyXG4gICAgICAgIG5ldyB2ZCgnZGl2JywgeyAnY2xhc3MnOiBcImNob3NlXCIgfSwgW1xyXG4gICAgICAgICAgICBuZXcgdmQoJ2RpdicsIHsgJ2NsYXNzJzogJ2Nob3NlQnV0dG9uJywgJ2lkJzogJ2F1dG9TaG93JyB9LCBbJ0F1dG8gcGxheSddKSxcclxuICAgICAgICAgICAgbmV3IHZkKCdkaXYnLCB7ICdjbGFzcyc6ICdjaG9zZUJ1dHRvbicsICdpZCc6ICdtYW51YWxTaG93JyB9LCBbJ0dvIEdpdGh1YiddKSxcclxuICAgICAgICBdKSxcclxuICAgIF0pOyIsImltcG9ydCB7IHZkIH0gZnJvbSAnLi4vdmlydHVhbF9kb21fYXBpL3ZpcnR1YWxfZG9tJztcclxuaW1wb3J0IHsgbWFzayB9IGZyb20gJy4vbWFzayc7XHJcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vLi4vY3NzL2luZGV4LmNzcyc7XHJcbmNvbnN0IHBlcnNvbmFsID0gbmV3IHZkKFxyXG4gICAgJ2RpdicsXHJcbiAgICB7XHJcbiAgICAgICAgJ2NsYXNzJzogJ2Rlc2NyaXB0aW9uSXRlbScsXHJcbiAgICAgICAgJ2RhdGEtaWQnOiAnMSdcclxuICAgIH0sIFtcclxuICAgICAgICBuZXcgdmQoJ2gyJywgbnVsbCwgWyfkuKrkurrku4vnu40nXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsn5aeT5ZCN77ya5p2c5aOr5Y2OJ10pLFxyXG4gICAgICAgIG5ldyB2ZCgnaDMnLCBudWxsLCBbJ+WHuueUn+W5tOaciO+8mjE5OTYuMTInXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsn5omL5py677yaMTUyLTQ3MTItNDgyNSddKSxcclxuICAgICAgICBuZXcgdmQoJ2gzJywgbnVsbCwgWyfpgq7nrrHvvJo3OTI2MzQ2MTRAcXEuY29tJ10pLFxyXG4gICAgICAgIG5ldyB2ZCgnaDMnLCBudWxsLCBbJ+S4quS6uuS7k+W6k++8micsIG5ldyB2ZCgnYScsIHsgJ2hyZWYnOiAnaHR0cHM6Ly9naXRodWIuY29tL3NhZG9mcmlvZCcgfSwgWydodHRwczovL2dpdGh1Yi5jb20vc2Fkb2ZyaW9kJ10pXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsn5pWZ6IKy6IOM5pmv77yaMjAxNSAtIDIwMTkg5YaF6JKZ5Y+k5bel5Lia5aSn5a2mIOi9r+S7tuW3peeoi+S4k+S4miDmnKznp5EnXSksXHJcbiAgICBdKTtcclxuY29uc3QgcHJvamVjdCA9IG5ldyB2ZCgnZGl2JyxcclxuICAgIHtcclxuICAgICAgICAnY2xhc3MnOiAnZGVzY3JpcHRpb25JdGVtJyxcclxuICAgICAgICAnZGF0YS1pZCc6ICcyJ1xyXG4gICAgfSwgW1xyXG4gICAgICAgIG5ldyB2ZCgnaDInLCBudWxsLCBbJ+acgOi/keeahOmhueebriddKSxcclxuICAgICAgICBuZXcgdmQoJ2gzJywgbnVsbCwgWyfkupHmsLTml4/nrrFBUFAnXSksXHJcbiAgICAgICAgbmV3IHZkKCdwJywgbnVsbCwgWyflnKjpobnnm67kuK3otJ/otKPnvJblhplBUFDjgIHpg6jliIZub2Rl5Luj56CB44CC5L2/55SocmVhY3QtbmF0aXZl5a6e546w77yM5Y2z5L2/5pWw5o2u6YCa5L+h5L2/55SoTVFUVOWNj+iuru+8iOiuoumYhS/lj5HluIPmqKHlvI/vvInmlbDmja7lupNteXNxbCzlkI7nq6/mmK/ln7rkuo5ub2RlLmpz55qEZXhwcmVzc+ahhuaetuOAgiddKSxcclxuICAgICAgICBuZXcgdmQoJ3AnLCBudWxsLCBbJ+eUqOaIt+WPr+S7pemAmui/h0FQUOi/nOeoi+ebkeaOp++8jOawtOaXj+euseeahOawtOa4qe+8jFBI5ZKM5ray5L2N44CCJ10pLFxyXG4gICAgICAgIG5ldyB2ZCgncCcsIG51bGwsIFsn5Y+v5Lul6YCa6L+HQVBQ5o+Q5L6b55qE5Yqf6IO977yM6L+c56iL5o6n5Yi25rC05peP566x5YaF572u55qE5Yqg54Ot5qOS44CB6aOO5omH5p2l5a6e546w5a+55rC05peP566x55qE5rip5bqm5o6n5Yi277yM6YCa6L+H6L+H5ruk5ZKM5o2i5rC05Yqf6IO95p2l5a6e546w5a+55rC05peP566x55qEUEjlkozmtrLkvY3mjqfliLbvvIzpgJrov4flloLpo5/lip/og73mjqfliLblloLpo5/lmajjgILnhLblkI7pgJrov4fop4bpopHmn6XnnIvmsLTml4/nrrHmg4XlhrXjgILop4bpopHmqKHlnZfkvb/nlKjkuoZ3ZWJydGPjgIInXSksXHJcbiAgICAgICAgbmV3IHZkKCdwJywgbnVsbCwgWyfpobnnm67ku5PlupPvvJonLCBuZXcgdmQoJ2EnLCB7ICdocmVmJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zYWRvZnJpb2QvZmlzaGJvd2wnIH0sIFsnaHR0cHM6Ly9naXRodWIuY29tL3NhZG9mcmlvZC9maXNoYm93bCddKV0pLFxyXG4gICAgXSk7XHJcbmNvbnN0IHNraWxsID0gbmV3IHZkKFxyXG4gICAgJ2RpdicsXHJcbiAgICB7XHJcbiAgICAgICAgJ2NsYXNzJzogJ2Rlc2NyaXB0aW9uSXRlbScsXHJcbiAgICAgICAgJ2RhdGEtaWQnOiAnMydcclxuICAgIH0sIFtcclxuICAgICAgICBuZXcgdmQoJ2gyJywgbnVsbCwgWyfmjozmj6HmioDog70nXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsnMeOAgeeGn+e7g+aOjOaPoUphdmFTY3JpcHTvvIhlczUvZXM277yJ77yMSFRNTO+8iDXvvInvvIxDU1PvvIgz77yJJ10pLFxyXG4gICAgICAgIG5ldyB2ZCgnaDMnLCBudWxsLCBbJzLjgIHnhp/mgolnaXTjgIFnaXRodWLliIbmlK/nrqHnkIbjgIFucG0nXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsnM+OAgeeGn+aCiXJlYWN0IG5hdGl2ZeOAgWFqYXgnXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsnNOOAgeS6huino25vZGUuanPjgIFodHRw5Y2P6K6uJ10pLFxyXG4gICAgXSk7XHJcbmNvbnN0IGVuZFBhZ2UgPSBuZXcgdmQoXHJcbiAgICAnZGl2JyxcclxuICAgIHtcclxuICAgICAgICAnY2xhc3MnOiAnZGVzY3JpcHRpb25JdGVtJyxcclxuICAgICAgICAnZGF0YS1pZCc6ICc0J1xyXG4gICAgfSwgW1xyXG4gICAgICAgIG5ldyB2ZCgnaDInLCBudWxsLCBbJ+S6huino+abtOWkmiAgbyggPiBfIDwgKW8nXSksXHJcbiAgICAgICAgbmV3IHZkKCdoMycsIG51bGwsIFsnQ2FsbCBNZToxNTI0NzEyNDgyNSddKSxcclxuICAgICAgICBuZXcgdmQoJ2gzJywgbnVsbCwgWydFLW1haWw6NzkyNjM0NjE0QHFxLmNvbSddKSxcclxuICAgICAgICBuZXcgdmQoJ2gzJywgbnVsbCwgWyfosKLosKLop4LnnIsnLCBuZXcgdmQoJ2EnLCB7ICdocmVmJzogJycgfSwgWyctPjsnXSldKVxyXG4gICAgXSk7XHJcblxyXG5jb25zdCBtb2JpbGVNZXRhID0gbmV3IHZkKFxyXG4gICAgJ21ldGEnLFxyXG4gICAge1xyXG4gICAgICAgICduYW1lJzogJ3ZpZXdwb3J0JyxcclxuICAgICAgICAnY29udGVudCc6XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSxoZWlnaHQgPSBkZXZpY2UtaGVpZ2h0XCJcclxuICAgIH1cclxuKVxyXG5jb25zdCBkZXNjcmlwdGlvbkdyb3VwID0gbmV3IHZkKFxyXG4gICAgJ2RpdicsIHsgY2xhc3M6ICdkZXNjcmlwdGlvbkdyb3VwJyB9LCBbcGVyc29uYWwsIHByb2plY3QsIHNraWxsLCBlbmRQYWdlXVxyXG4pO1xyXG5kb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKG1vYmlsZU1ldGEucmVuZGVyKCkpXHJcbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobWFzay5yZW5kZXIoKSk7XHJcbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25Hcm91cC5yZW5kZXIoKSk7Il0sInNvdXJjZVJvb3QiOiIifQ==